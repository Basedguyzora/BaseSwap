import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import { TrendingUp, TrendingDown } from "lucide-react";

export default function PriceChart({ token }) {
  const generateMockData = () => {
    const data = [];
    let price = token?.price_usd || 2000;
    for (let i = 24; i >= 0; i--) {
      price = price + (Math.random() - 0.5) * 50;
      data.push({
        time: i === 0 ? "Now" : `${i}h`,
        price: price,
      });
    }
    return data;
  };

  const data = generateMockData();
  const priceChange = token?.price_change_24h || 0;

  return (
    <Card className="bg-slate-900/50 border-white/10 backdrop-blur-xl">
      <CardHeader>
        <CardTitle className="flex items-center justify-between">
          <div>
            <p className="text-gray-400 text-sm font-normal">
              {token?.symbol || "ETH"} Price
            </p>
            <div className="flex items-center gap-2 mt-1">
              <span className="text-2xl font-bold text-white">
                ${token?.price_usd?.toFixed(2) || "0.00"}
              </span>
              <div className={`flex items-center gap-1 text-sm ${
                priceChange >= 0 ? "text-green-400" : "text-red-400"
              }`}>
                {priceChange >= 0 ? (
                  <TrendingUp className="w-4 h-4" />
                ) : (
                  <TrendingDown className="w-4 h-4" />
                )}
                {Math.abs(priceChange).toFixed(2)}%
              </div>
            </div>
          </div>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <ResponsiveContainer width="100%" height={200}>
          <LineChart data={data}>
            <XAxis
              dataKey="time"
              stroke="#6B7280"
              style={{ fontSize: "12px" }}
            />
            <YAxis
              stroke="#6B7280"
              style={{ fontSize: "12px" }}
              domain={['auto', 'auto']}
            />
            <Tooltip
              contentStyle={{
                backgroundColor: "#1E293B",
                border: "1px solid rgba(255,255,255,0.1)",
                borderRadius: "8px",
                color: "#fff",
              }}
              formatter={(value) => [`$${value.toFixed(2)}`, "Price"]}
            />
            <Line
              type="monotone"
              dataKey="price"
              stroke={priceChange >= 0 ? "#10B981" : "#EF4444"}
              strokeWidth={2}
              dot={false}
            />
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
}
